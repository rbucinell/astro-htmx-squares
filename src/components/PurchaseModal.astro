---
const label = "block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2";
const inputForm = "peer appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-500 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white";
const invalid = "invalid:[&:not(:placeholder-shown):not(:focus)]:border-red-500";
const validationError = "mt-2 hidden text-sm text-red-500 peer-[&:not(:placeholder-shown):not(:focus):invalid]:block";

const { price } = Astro.props;
---
<!-- <button onclick="showDialog()" class="bg-white py-3 rounded px-5 text-grey-600">Open Modal</button> -->
<div id="dialog" onclick="hideDialog()" class="fixed left-0 top-0 bg-black bg-opacity-50 w-screen h-screen max-sm:w-full max-sm:h-full justify-center items-center opacity-0 hidden transition-opacity duration-500">
  <div id="modal" class="bg-white rounded shaodw-md w-[40%] max-sm:w-[80%] flex flex-col gap-5">
    <form id="reseveForm" class="grow group" novalidate>
    <div class="flex flex-col p-4 pb-0 gap-6">
      
      
      <div class="flex p-4 pb-0 gap-6 flex-row">
        <div class="bg-blue-400 rounded-full p-2 sky-yellow-600 w-10 h-10 flex items-center justify-center">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 0 0-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 0 0-16.536-1.84M7.5 14.25 5.106 5.272M6 20.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Zm12.75 0a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z" />
          </svg>
        </div>
        
        
        <h1 class="font-bold text-lg mb-2 text-zinc-800">Reserving <span id="squareCount"></span> Square<span id="multisquares" /></h1>
      </div>

      <div class="w-full px-3 flex flex-col gap-0.5">
        <label class="mb-3" for="email">
          <span class={label}>Email</span>
          <input  id="email" name="email" type="email" class:list={[inputForm, invalid]} 
                  pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$" placeholder="bob@domain.com" required>
          <span class={validationError}>Please enter a valid email address</span>
        </label>

        <label class="mb-3" for="name">
          <span class={label}>Name</span>
          <input id="name" name="name" type="text" pattern=".{3,}" class:list={[inputForm, invalid]} placeholder="Bob" required>
          <span class={validationError}> Please enter a longer name (min 3 characters)</span>
        </label>
        <input type="hidden" id="price" name="price" value={price}>
        <p>You're squares will be marked as resevered, until I receive payment.</p>
      </div>

    </div>

    <div class="bg-gray-200 p-3 px-6 gap-4 flex justify-end">
      <button type="button" onclick="hideDialog()"     class="bg-red-700 rounded px-4 py-2 text-white cursor-pointer">Cancel</button>
      <button type="button" onclick="reserveSquares()" class="bg-green-700 rounded px-4 py-2 text-white cursor-pointer group-invalid:pointer-events-none group-invalid:opacity-30">Purchase</button>
    </div>
  </div>
</form>
</div>

<script is:inline>
  document.querySelector('#modal').addEventListener('click', evt => evt.stopImmediatePropagation() );
  
  function hideDialog(){
    console.log( 'hid')
    let dialog = document.querySelector('#dialog');
    dialog.classList.add('opacity-0');
    dialog.classList.remove('opacity-100');
    setTimeout(()=>{
      dialog.classList.add('hidden');
      dialog.classList.remove('flex');
    }, 500)
  }

  function getTotal() {
    const form = document.querySelector('#reseveForm');
    const price = parseInt(form.querySelector('#price').value);
    return clickedSquares.length * price;
  }

  function reserveSquares() {
    const form = document.querySelector('#reseveForm');
    if( form.checkValidity() ){
      const total = getTotal();
      const venmo =`https://venmo.com/?txn=request&audience=private&recipients=@rbucinell&amount=${total}&note=${total}%20Superbowl%20Squares`;
      const paypal =`paypal.me/rbucinell/${total}`;
      console.log( venmo, paypal);
    }
  }
</script>