---
import Helmet from './Helmet.astro';

export enum SquareState {
    OPEN, SELECTED, RESERVED, BOOKED
}
const stateClasses = [
    /*OPEN*/    ['bg-gray-100','hover:bg-blue-200','cursor-pointer'],
    /*SELECTED*/['bg-blue-400','cursor-pointer'],
    /*RESERVED*/['bg-red-400','text-red-900'],
    /*BOOKED*/  ['bg-gray-200'],
  ]

export interface Pick {
  email:string,
  display:string,
  paid:boolean,
  pick:string,
  color?:string
}

interface Props {
  row: string,
  col: number,
  state?: SquareState,
  pick?: Pick,
}

const { row, col, state=SquareState.OPEN, pick } = Astro.props;
const id = `${row}${col}`;
---
<td id={id} class:list={["square overflow-auto p-0 w-14 h-12 max-h-12 border border-gray-500 font-bold aspect-square select-none"].concat(...stateClasses[state])}>
  { (state === SquareState.OPEN || state === SquareState.SELECTED) 
    ? <span>{row}{col}</span>
    : <div class="max-h-12 overflow-hidden" title={`[${id}] ${pick.display}`}>
      
        <Helmet id={id} color={pick.color} />
        <div class="bg-gray-200 bg-opacity-50 text-black overflow-clip mx-auto text-xs max-sm:bottom-3 max-w-14 max-md:bottom-4 bottom-6 relative">{`${pick.display.replace(' ','\xa0')}`}</div>
      </div>
  }
  
</td>
<script define:vars={{ stateClasses, SquareState, id, row, col, state }}>
  let square = document.querySelector(`#${id}`);
  if( state !== SquareState.RESERVED && state !== SquareState.BOOKED)
    square.addEventListener('click', selectPick);

  function selectPick() {
    //ensure the array exists
    if( !clickedSquares ) clickedSquares = [];

    let index = clickedSquares.indexOf( square );
    // If not in the array, add it; otherwise, remove it
    if (index === -1) {
      square.setAttribute('state', SquareState.SELECTED);
      clickedSquares.push(square);
    } else {
      square.setAttribute('state', SquareState.OPEN);
      clickedSquares.splice(index, 1);
    }
    
    updateSquareVisuals( square );
    updateList();
  }
  
  function updateList() {
    let submitBtn = document.querySelector('#submitSquaresButton');
    if( clickedSquares.length === 0) 
      submitBtn.classList.add('hidden');
    else
      submitBtn.classList.remove('hidden');
    let listDiv = document.querySelector('#clickedList');
    let html = clickedSquares.map( cs => `<span class="border-solid border-black">${cs.id}</span>`).join(' ');
    listDiv.innerHTML = html;
  }

  function updateSquareVisuals( square ){
    let state = parseInt(square.getAttribute('state'));

    stateClasses.forEach( classStateArr => classStateArr.forEach( classState => square.classList.remove(classState) ));
    stateClasses[state].forEach( st => square.classList.add( st ));
  }
  
</script>